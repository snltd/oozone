#!/usr/bin/env ruby

require 'logger'
require_relative 'lib/controller'
require_relative 'lib/config_loader'
require_relative 'lib/customize'

abort 'usage: ozone <command> <zone>' unless ARGV.size == 2

LOG = Logger.new(STDOUT)

def create_zone(zname)
  LOG.info "creating zone '#{zname}'"
  zone = ZoneManager::Controller.new(zname)
  conf = ZoneManager::ConfigLoader.new(zname)
  conf.write_config
  zone.teardown
  zone.configure
  zone.install
  zone.boot
  zone.wait_for_readiness
  ZoneManager::Customize.new(conf.metadata).customize!
end

def destroy_zone(zname)
  LOG.info("tearing down zone '#{zname}'")
  ZoneManager::Controller.new(zname).teardown
end

def recreate_zone
  abort 'recreate not supported'
end

def customize_zone(zname)
  conf = ZoneManager::ConfigLoader.new(zname)
  ZoneManager::Customize.new(conf.metadata).customize!
end

unless Process.euid.zero?
  puts 'NOT RUNNING AS EUID ZERO. THINGS MAY NOT WORK! CTRL-C TO STOP.'
  sleep 3
end

cmd = ARGV.first.to_sym
zname = ARGV.last

case cmd
when :create
  create_zone(zname)
when :destroy
  destroy_zone(zname)
when :recreate
  recreate_zone(zname)
when :customize
  customize_zone(zname)
else
  abort 'unknown command'
end
